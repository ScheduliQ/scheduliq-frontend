name: Frontend CD – Deploy(production)

on:
  # Automatic deploy whenever production branch receives a new commit
  push:
    branches:
      - main

  # Optional: allow a manual “Run workflow” button in the GitHub UI
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Frontend to Render
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the repo at the commit we want to deploy
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Optionally do a light smoke build to fail fast if something is broken
      #    (Render will also rebuild, but this avoids pushing a bad commit)
      - name: Install deps & build
        run: |
          npm ci
          npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

      # 3) Trigger the Render deploy‑hook for the production service
      #    Store the full hook URL in a GitHub secret called RENDER_DEPLOY_HOOK
      - name: Kick off Render deploy
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            ${{ secrets.RENDER_DEPLOY_HOOK }}
